// <auto-generated />
using System;
using AdminVentas.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SevillaAdminVentas.Api.Migrations
{
    [DbContext(typeof(BDGestorVentasContext))]
    partial class BDGestorVentasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CatAmbitTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CatAmbitTypeEntity");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CatInvoiceStatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CatInvoiceStatusEntity");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CatInvoiceTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CatInvoiceTypeEntity");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CatStatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CatStatusEntity");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CatTaxTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("CatTaxTypeEntity");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CustomerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("CityId");

                    b.Property<string>("ComertialName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("Cp")
                        .HasColumnName("CP");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Rfc")
                        .IsRequired()
                        .HasColumnName("RFC")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<int>("StateId");

                    b.Property<int>("StatusId")
                        .HasColumnName("StatusID");

                    b.Property<string>("TaxResidence")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("UserId")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("CustomerEntity");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.InvoiceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Folio");

                    b.Property<string>("Rcfreceiver")
                        .IsRequired()
                        .HasColumnName("RCFReceiver")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("StatusId");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 3)");

                    b.Property<int>("TypeId")
                        .HasColumnName("TypeID");

                    b.Property<int>("UserId");

                    b.Property<byte[]>("Uuid")
                        .IsRequired()
                        .HasColumnName("UUID")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("InvoiceEntity");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Idnumber")
                        .IsRequired()
                        .HasColumnName("IDNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("ProdServKey")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("StatusId");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UnitKey")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("ProductEntity");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.Product2TaxEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId");

                    b.Property<int>("TaxId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TaxId");

                    b.ToTable("Product2TaxEntity");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.TaxEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FactorType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("FeeRate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(10, 6)");

                    b.Property<int>("StatusId");

                    b.Property<string>("TaxKey")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("TypeAmbitId");

                    b.Property<int>("TypeId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeAmbitId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("TaxEntity");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("StatusId");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("UserEntity");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CustomerEntity", b =>
                {
                    b.HasOne("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CatStatusEntity", "Status")
                        .WithMany("CustomerEntity")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Customer_CatStatus");

                    b.HasOne("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.UserEntity", "UserEntity")
                        .WithMany("CustomerEntity")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Customer_User");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.InvoiceEntity", b =>
                {
                    b.HasOne("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CatInvoiceStatusEntity", "Status")
                        .WithMany("InvoiceEntity")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Invoice_CatStatusInvoice");

                    b.HasOne("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CatInvoiceTypeEntity", "Type")
                        .WithMany("InvoiceEntity")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Invoice_CatTypeInvoice");

                    b.HasOne("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.UserEntity", "UserEntity")
                        .WithMany("InvoiceEntity")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Invoice_User");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.Product2TaxEntity", b =>
                {
                    b.HasOne("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.ProductEntity", "ProductEntity")
                        .WithMany("Product2TaxEntity")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_Invoice2Tax_Product");

                    b.HasOne("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.TaxEntity", "TaxEntity")
                        .WithMany("Product2TaxEntity")
                        .HasForeignKey("TaxId")
                        .HasConstraintName("FK_Invoice2Tax_Tax");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.TaxEntity", b =>
                {
                    b.HasOne("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CatStatusEntity", "Status")
                        .WithMany("TaxEntity")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Tax_CatStatus");

                    b.HasOne("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CatAmbitTypeEntity", "TypeAmbit")
                        .WithMany("TaxEntity")
                        .HasForeignKey("TypeAmbitId")
                        .HasConstraintName("FK_Tax_CatAmbitType");

                    b.HasOne("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CatTaxTypeEntity", "Type")
                        .WithMany("TaxEntity")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Tax_CatTaxType");

                    b.HasOne("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.UserEntity", "UserEntity")
                        .WithMany("TaxEntity")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Tax_User");
                });

            modelBuilder.Entity("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.UserEntity", b =>
                {
                    b.HasOne("AdminVentas.DataAccess.Contracts.Entities.InvoiceEntity.CatStatusEntity", "Status")
                        .WithMany("UserEntity")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_User_CatStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
